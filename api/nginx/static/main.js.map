{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/info-display/info-display.component.html","./src/app/components/search-bar/search-bar.component.html","./src/app/components/single-post-display/single-post-display.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/info-display/info-display.component.scss","./src/app/components/info-display/info-display.component.ts","./src/app/components/search-bar/search-bar.component.scss","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/single-post-display/single-post-display.component.scss","./src/app/components/single-post-display/single-post-display.component.ts","./src/app/services/reddit-auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"row m-4 p-4 title-block\\\">\\n    <div class=\\\"col\\\"></div>\\n    <h1>\\n      {{ title }}\\n    </h1>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n\\n  <div class=\\\"row m-4 p-4 option-block\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-search-bar\\n        (sentimentInfo)=\\\"onSentimentInfo($event)\\\"\\n        (onLoading)=\\\"onLoading($event)\\\"\\n        [loading]=\\\"loading\\\"\\n      ></app-search-bar>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row m-4 p-4 main-block\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-info-display [loading]=\\\"loading\\\" [rawInfo]=\\\"rawInfo\\\"></app-info-display>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div *ngIf=\\\"showInfo\\\">\\n  <h4>Overall Score: {{ scoreSum }}</h4>\\n  <h4>Overall Magnitude: {{ magnitudeSum }}</h4>\\n  <div *ngFor=\\\"let info of filteredInfo\\\">\\n    <app-single-post-display [postData]=\\\"info['detail']\\\"></app-single-post-display>\\n  </div>\\n</div>\\n\"","module.exports = \"<form #searchForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"subreddit-name\\\"\\n          placeholder=\\\"Enter subreddit here\\\"\\n          [(ngModel)]=\\\"current_subreddit\\\"\\n        />\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n          <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>{{ current_category }}</button>\\n          <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n            <button *ngFor=\\\"let category of categories\\\" (click)=\\\"onClickCategory(category)\\\" ngbDropdownItem>\\n              {{ category }}\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"loading\\\">Search!</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"<!-- <div *ngFor=\\\"let data of postData\\\">\\n  {{ data[\\\"detail\\\"][0][\\\"text\\\"] }}\\n</div> -->\\nHI\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".title-block {\\n  background-color: #fad6ee;\\n}\\n\\n.main-block {\\n  background-color: #dcd6fa;\\n}\\n\\n.option-block {\\n  background-color: #d6faec;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oaWRveWEvQ29kZS9yZWRkaXQtc2VudGltZW50L2NsaWVudC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0FDQ0Y7O0FERUE7RUFDRSx5QkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlLWJsb2NrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZDZlZTtcbn1cblxuLm1haW4tYmxvY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGNkNmZhO1xufVxuXG4ub3B0aW9uLWJsb2NrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q2ZmFlYztcbn1cbiIsIi50aXRsZS1ibG9jayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWQ2ZWU7XG59XG5cbi5tYWluLWJsb2NrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RjZDZmYTtcbn1cblxuLm9wdGlvbi1ibG9jayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkNmZhZWM7XG59Il19 */\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title: string = \"Reddit Sentiment\";\n  rawInfo: Object;\n  loading = false;\n\n  // Getting sentient analysis info\n  onSentimentInfo(info: Object) {\n    this.rawInfo = info;\n  }\n\n  // If loading\n  onLoading(loading: boolean) {\n    this.loading = loading;\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { InfoDisplayComponent } from './components/info-display/info-display.component';\nimport { SinglePostDisplayComponent } from './components/single-post-display/single-post-display.component';\n\n@NgModule({\n  declarations: [AppComponent, SearchBarComponent, InfoDisplayComponent, SinglePostDisplayComponent],\n  imports: [BrowserModule, AppRoutingModule, NgbModule, HttpClientModule, CommonModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5mby1kaXNwbGF5L2luZm8tZGlzcGxheS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, OnChanges } from \"@angular/core\";\n\n@Component({\n  selector: \"app-info-display\",\n  templateUrl: \"./info-display.component.html\",\n  styleUrls: [\"./info-display.component.scss\"]\n})\nexport class InfoDisplayComponent implements OnChanges, OnInit {\n  @Input() rawInfo: Object;\n  @Input() loading: boolean;\n\n  showInfo = false;\n  magnitudeSum: Number;\n  scoreSum: Number;\n  filteredInfo: Array<Object>;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  isEmpty(obj: Object) {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  ngOnChanges() {\n    if (!this.isEmpty(this.rawInfo)) {\n      this.showInfo = true;\n      console.log(this.rawInfo);\n\n      //TODO Also calculate the average\n\n      // Reset\n      this.magnitudeSum = 0;\n      this.scoreSum = 0;\n      this.filteredInfo = [];\n\n      // Add to sums and filter for substantive data\n      Object.keys(this.rawInfo).forEach(key => {\n        this.scoreSum += this.rawInfo[key][\"overall_score\"];\n        this.magnitudeSum += this.rawInfo[key][\"overall_magnitude\"];\n        if (this.rawInfo[key][\"detail\"].length !== 0) {\n          this.filteredInfo.push(this.rawInfo[key]);\n        }\n      });\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLWJhci9zZWFyY2gtYmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter, Input, SystemJsNgModuleLoaderConfig } from \"@angular/core\";\nimport { RedditAuthService } from \"../../services/reddit-auth.service\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.scss\"]\n})\nexport class SearchBarComponent implements OnInit {\n  @Input() loading: boolean;\n\n  @Output() sentimentInfo = new EventEmitter<Object>();\n  @Output() onLoading = new EventEmitter<Boolean>();\n\n  current_subreddit: string = \"\";\n  current_category: string = \"Top\";\n  categories = [\"Hot\", \"Top\", \"New\"];\n\n  constructor(private redditAuthService: RedditAuthService) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    // If already loading, don't do anything\n    if (this.loading) {\n      return;\n    }\n\n    // Send request\n    let promise: Observable<Object> = this.redditAuthService.getAnalyze(this.current_subreddit, this.current_category);\n\n    // Currently loading\n    this.onLoading.emit(true);\n\n    // When request done, send to parent\n    promise.subscribe(res => {\n      this.sentimentInfo.emit(res);\n      this.onLoading.emit(false);\n    });\n  }\n\n  onClickCategory(category: string) {\n    this.current_category = category;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2luZ2xlLXBvc3QtZGlzcGxheS9zaW5nbGUtcG9zdC1kaXNwbGF5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-single-post-display\",\n  templateUrl: \"./single-post-display.component.html\",\n  styleUrls: [\"./single-post-display.component.scss\"]\n})\nexport class SinglePostDisplayComponent implements OnInit {\n  @Input() postData: Object;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UrlSerializer } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedditAuthService {\n  access_token: string;\n\n  constructor(private httpClient: HttpClient, private urlSerializer: UrlSerializer) {\n    this.getToken();\n  }\n\n  getToken() {\n    if (window.location.search !== \"\") {\n      // If already authorized (user logged into reddit), parse the link\n      let parsedTree = this.urlSerializer.parse(window.location.search);\n      if (\"error\" in parsedTree.queryParams) {\n        // Error was found\n        console.log(parsedTree.queryParams.error);\n        return;\n      }\n      // Parse code and send to backend for authorization\n      let code = parsedTree.queryParams.code;\n      console.log(\"Requesting access token with code: \" + code);\n\n      this.httpClient.get(`/api/auth?code=${code}`).subscribe(res => {\n        console.log(\"Access token: \" + res[\"access_token\"]);\n        this.access_token = res[\"access_token\"];\n      });\n    } else {\n      window.location.replace(\n        `https://www.reddit.com/api/v1/authorize?` +\n          `client_id=4YzuQQE-yhj8wQ` +\n          `&response_type=code` +\n          `&state=state` +\n          `&redirect_uri=${window.location.origin}` +\n          `&duration=temporary` +\n          `&scope=read`\n      );\n    }\n  }\n\n  // Calls backend to get reddit data and analyze\n  getAnalyze(subreddit: string, category: string) {\n    let url = `https://oauth.reddit.com/r/${subreddit.toLowerCase()}/${category.toLowerCase()}.json?limit=100`;\n    let body = {\n      url: url,\n      access_token: this.access_token\n    };\n\n    return this.httpClient.post(\"/api/analyze\", body);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}