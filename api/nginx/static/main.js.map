{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/info-display/info-display.component.html","./src/app/components/search-bar/search-bar.component.html","./src/app/components/single-post-display/single-post-display.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/info-display/info-display.component.scss","./src/app/components/info-display/info-display.component.ts","./src/app/components/search-bar/search-bar.component.scss","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/single-post-display/single-post-display.component.scss","./src/app/components/single-post-display/single-post-display.component.ts","./src/app/services/reddit-auth.service.ts","./src/app/utility/color.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"row p-4 title-block\\\">\\n    <div class=\\\"col\\\"></div>\\n    <h1>\\n      {{ title }}\\n    </h1>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n\\n  <div *ngIf=\\\"this.redditAuthService.access_token.includes('ERROR')\\\">\\n    <p>Error authenticating your reddit access token. Authenticate below.</p>\\n    <button class=\\\"btn btn-outline-primary m-3\\\" (click)=\\\"onReauthClick()\\\">\\n      Authenticate\\n    </button>\\n  </div>\\n\\n  <div class=\\\"row m-4 p-4 option-block\\\" (mouseenter)=\\\"showDescription = true\\\" (mouseleave)=\\\"showDescription = false\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-search-bar\\n        (onRawInfo)=\\\"onRawInfo($event)\\\"\\n        (onLoading)=\\\"onLoading($event)\\\"\\n        (onError)=\\\"onError($event)\\\"\\n        (onRedditTitle)=\\\"onRedditTitle($event)\\\"\\n        (onErrorStr)=\\\"onErrorStr($event)\\\"\\n        [loading]=\\\"loading\\\"\\n      ></app-search-bar>\\n      <div [className]=\\\"'description ' + (showDescription ? 'show-css' : 'hide-css')\\\">\\n        <p>Enter the url of the subreddit or the reddit post which you wish to analyze.</p>\\n        <p>This website requires cookies to be enabled.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row m-4 main-block\\\">\\n    <app-info-display\\n      class=\\\"fullWidth\\\"\\n      [loading]=\\\"loading\\\"\\n      [rawInfo]=\\\"rawInfo\\\"\\n      [redditTitle]=\\\"redditTitle\\\"\\n      [error]=\\\"error\\\"\\n      [errorStr]=\\\"errorStr\\\"\\n    ></app-info-display>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<h3 class=\\\"mt-2\\\">{{ redditTitle }}</h3>\\n\\n<div *ngIf=\\\"error; then errorDom; else successDom\\\"></div>\\n\\n<ng-template #successDom>\\n  <div *ngIf=\\\"showInfo && !loading\\\">\\n    <div class=\\\"mt-4 mb-4\\\">\\n      <h4 [style.color]=\\\"colorize(scoreAvg)\\\">Average Score: {{ scoreAvg.toFixed(1) }}</h4>\\n      <p>Score is from -10 to 10 (very negative to very positive).</p>\\n    </div>\\n    <div *ngFor=\\\"let info of filteredInfo\\\">\\n      <app-single-post-display [postData]=\\\"info\\\"></app-single-post-display>\\n    </div>\\n  </div>\\n  <ngx-spinner bdOpacity=\\\"0.3\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-climbing-dot\\\" [fullScreen]=\\\"true\\\">\\n    <p style=\\\"color: white\\\">Loading...</p>\\n  </ngx-spinner>\\n</ng-template>\\n\\n<ng-template #errorDom>\\n  <div class=\\\"mt-4 mb-4\\\">Errors found while getting data.</div>\\n  <div>{{ errorStr }}</div>\\n</ng-template>\\n\"","module.exports = \"<form #searchForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 mt-1 mb-1\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"reddit-name\\\" placeholder=\\\"Url\\\" [(ngModel)]=\\\"current_reddit\\\" />\\n      </div>\\n      <div class=\\\"col-md-1 mt-1 mb-1\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n          <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>{{ current_category }}</button>\\n          <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n            <button *ngFor=\\\"let category of categories\\\" (click)=\\\"current_category = category\\\" ngbDropdownItem>\\n              {{ category }}\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 mt-1 mb-1\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n          <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic2\\\" ngbDropdownToggle>{{ current_limit }}</button>\\n          <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n            <button *ngFor=\\\"let limit of limits\\\" (click)=\\\"current_limit = limit\\\" ngbDropdownItem>\\n              {{ limit }}\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2 mt-1 mb-1\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"disableClick()\\\">Search!</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"<div class=\\\"p-4 mt-3 mb-3 single-post\\\">\\n  <h5 class=\\\"single-line-in-post\\\" placement=\\\"right\\\" [ngbTooltip]=\\\"titleTipContent\\\" [style.color]=\\\"color(titleData['score'])\\\">\\n    <ng-template #titleTipContent>Score: {{ titleData[\\\"score\\\"] }}</ng-template>\\n    {{ titleData[\\\"text\\\"] }}\\n  </h5>\\n  <span\\n    class=\\\"single-line-in-post\\\"\\n    *ngFor=\\\"let data of bodyData\\\"\\n    placement=\\\"right\\\"\\n    [ngbTooltip]=\\\"baseTipContent\\\"\\n    [style.color]=\\\"color(data['score'])\\\"\\n  >\\n    <ng-template #baseTipContent>Score: {{ data[\\\"score\\\"] }}</ng-template>\\n    {{ data[\\\"text\\\"] }}\\n  </span>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".option-block {\\n  border: 0.15em solid #b7b7b7;\\n}\\n\\n.fullWidth {\\n  width: 100%;\\n}\\n\\n.description {\\n  transition: max-height 0.1s ease-in-out;\\n}\\n\\n.show-css {\\n  max-height: 15em;\\n  overflow-y: hidden;\\n}\\n\\n.hide-css {\\n  max-height: 0em;\\n  overflow-y: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oaWRveWEvQ29kZS9yZWRkaXQtc2VudGltZW50L2NsaWVudC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0VBQ0UsNEJBQUE7QUNMRjs7QURRQTtFQUNFLFdBQUE7QUNMRjs7QURRQTtFQUNFLHVDQUFBO0FDTEY7O0FEUUE7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FDTEY7O0FEUUE7RUFDRSxlQUFBO0VBQ0Esa0JBQUE7QUNMRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZS1ibG9jayB7XG59XG5cbi5tYWluLWJsb2NrIHtcbn1cblxuLm9wdGlvbi1ibG9jayB7XG4gIGJvcmRlcjogMC4xNWVtIHNvbGlkICNiN2I3Yjc7XG59XG5cbi5mdWxsV2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRlc2NyaXB0aW9uIHtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjFzIGVhc2UtaW4tb3V0O1xufVxuXG4uc2hvdy1jc3Mge1xuICBtYXgtaGVpZ2h0OiAxNWVtO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbi5oaWRlLWNzcyB7XG4gIG1heC1oZWlnaHQ6IDBlbTtcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xufVxuIiwiLm9wdGlvbi1ibG9jayB7XG4gIGJvcmRlcjogMC4xNWVtIHNvbGlkICNiN2I3Yjc7XG59XG5cbi5mdWxsV2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRlc2NyaXB0aW9uIHtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjFzIGVhc2UtaW4tb3V0O1xufVxuXG4uc2hvdy1jc3Mge1xuICBtYXgtaGVpZ2h0OiAxNWVtO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbi5oaWRlLWNzcyB7XG4gIG1heC1oZWlnaHQ6IDBlbTtcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { RedditAuthService } from \"./services/reddit-auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  title: string = \"Reddit Sentiment\";\n  rawInfo: Object;\n  loading = false;\n  error = false;\n  errorStr: string;\n  redditTitle: string;\n  showDescription = false;\n\n  constructor(private redditAuthService: RedditAuthService) {}\n\n  ngOnInit() {}\n\n  onReauthClick() {\n    this.redditAuthService.resetCookie();\n    this.redditAuthService.gotoRedditOauth();\n  }\n\n  // Getting sentient analysis info\n  onRawInfo(info: Object) {\n    this.rawInfo = info;\n  }\n\n  // If loading\n  onLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  onRedditTitle(redditTitle: string) {\n    this.redditTitle = redditTitle;\n  }\n\n  onError(error: boolean) {\n    this.error = error;\n  }\n\n  onErrorStr(errorStr: string) {\n    this.errorStr = errorStr;\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { InfoDisplayComponent } from \"./components/info-display/info-display.component\";\nimport { SinglePostDisplayComponent } from \"./components/single-post-display/single-post-display.component\";\n\n@NgModule({\n  declarations: [AppComponent, SearchBarComponent, InfoDisplayComponent, SinglePostDisplayComponent],\n  imports: [BrowserModule, AppRoutingModule, NgbModule, HttpClientModule, CommonModule, FormsModule, NgxSpinnerModule],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5mby1kaXNwbGF5L2luZm8tZGlzcGxheS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, OnChanges } from \"@angular/core\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { colorize } from \"../../utility/color\";\n\n@Component({\n  selector: \"app-info-display\",\n  templateUrl: \"./info-display.component.html\",\n  styleUrls: [\"./info-display.component.scss\"]\n})\nexport class InfoDisplayComponent implements OnChanges, OnInit {\n  @Input() rawInfo: Object;\n  @Input() redditTitle: string;\n  @Input() loading: boolean;\n  @Input() error: boolean = false;\n  @Input() errorStr: string;\n\n  showInfo = false;\n  scoreAvg: number;\n  filteredInfo: Array<Object>;\n\n  constructor(private spinner: NgxSpinnerService) {}\n\n  ngOnInit() {}\n\n  isEmpty(obj: Object) {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  ngOnChanges() {\n    if (this.loading) {\n      this.spinner.show();\n    } else {\n      this.spinner.hide();\n    }\n\n    if (!this.isEmpty(this.rawInfo)) {\n      this.showInfo = true;\n\n      // Reset\n      let scoreSum = 0;\n      let numberTotal = 0;\n      this.filteredInfo = [];\n\n      // Add to sums and filter for substantive data\n      Object.keys(this.rawInfo).forEach(key => {\n        // Check that the data is not empty\n        if (this.rawInfo[key][\"detail\"].length !== 0) {\n          this.filteredInfo.push(this.rawInfo[key][\"detail\"]);\n          numberTotal++;\n          scoreSum += this.rawInfo[key][\"overall_score\"];\n        }\n      });\n\n      this.scoreAvg = scoreSum / numberTotal;\n    }\n  }\n\n  color(num: number) {\n    return colorize(num);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLWJhci9zZWFyY2gtYmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { RedditAuthService } from \"../../services/reddit-auth.service\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.scss\"]\n})\nexport class SearchBarComponent implements OnInit {\n  @Input() loading: boolean;\n\n  @Output() onRawInfo = new EventEmitter<Object>();\n  @Output() onLoading = new EventEmitter<Boolean>();\n  @Output() onError = new EventEmitter<Boolean>();\n  @Output() onErrorStr = new EventEmitter<Boolean>();\n  @Output() onRedditTitle = new EventEmitter<string>();\n\n  current_reddit: string = \"\";\n  current_category: string = \"Top\";\n  current_limit = 5;\n  categories = [\"Hot\", \"Top\", \"New\"];\n  limits = [5, 10, 20, 50];\n\n  constructor(private redditAuthService: RedditAuthService) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    // If already loading, don't do anything\n    if (this.loading) {\n      return;\n    }\n\n    // Send request\n    let promise: Observable<Object> = this.redditAuthService.getAnalyze(\n      this.current_reddit,\n      this.current_category,\n      this.current_limit\n    );\n\n    // Currently loading\n    this.onLoading.emit(true);\n    this.onError.emit(false);\n\n    // When request done, send to parent\n    promise.subscribe(res => {\n      if (res[\"error\"]) {\n        this.onError.emit(true);\n        this.onErrorStr.emit(res[\"error\"]);\n        this.onLoading.emit(false);\n      } else {\n        this.onError.emit(false);\n        this.onRawInfo.emit(res[\"sentiment_dict\"]);\n        this.onRedditTitle.emit(res[\"title\"]);\n        this.onLoading.emit(false);\n      }\n    });\n  }\n\n  disableClick() {\n    return this.loading || this.redditAuthService.access_token.includes(\"ERROR\");\n  }\n}\n","module.exports = \".single-line-in-post:hover {\\n  font-weight: bold;\\n}\\n\\n.single-post {\\n  background-color: #0000004d;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oaWRveWEvQ29kZS9yZWRkaXQtc2VudGltZW50L2NsaWVudC9zcmMvYXBwL2NvbXBvbmVudHMvc2luZ2xlLXBvc3QtZGlzcGxheS9zaW5nbGUtcG9zdC1kaXNwbGF5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3NpbmdsZS1wb3N0LWRpc3BsYXkvc2luZ2xlLXBvc3QtZGlzcGxheS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUdFLGlCQUFBO0FDRko7O0FETUE7RUFDRSwyQkFBQTtBQ0hGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zaW5nbGUtcG9zdC1kaXNwbGF5L3NpbmdsZS1wb3N0LWRpc3BsYXkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2luZ2xlLWxpbmUtaW4tcG9zdCB7XG4gICY6aG92ZXIge1xuICAgIC8vIFVzZSBpbnN0ZWFkIG9mIGJvbGRpbmcgaW4gb3JkZXIgdG8gcHJlc2VydmUgd2lkdGhcbiAgICAvLyB0ZXh0LXNoYWRvdzogLTAuMDZleCAwIGJsYWNrLCAwLjA2ZXggMCBibGFjaztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxufVxuXG4uc2luZ2xlLXBvc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwNGQ7XG59XG4iLCIuc2luZ2xlLWxpbmUtaW4tcG9zdDpob3ZlciB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uc2luZ2xlLXBvc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwNGQ7XG59Il19 */\"","import { Component, OnInit, Input, OnChanges } from \"@angular/core\";\nimport { colorize } from \"../../utility/color\";\n\n@Component({\n  selector: \"app-single-post-display\",\n  templateUrl: \"./single-post-display.component.html\",\n  styleUrls: [\"./single-post-display.component.scss\"]\n})\nexport class SinglePostDisplayComponent implements OnInit, OnChanges {\n  @Input() postData: Object;\n\n  titleData: Object;\n  bodyData: Array<Object>;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    // Split postData into title and normal text\n    this.titleData = this.postData[0];\n    this.bodyData = JSON.parse(JSON.stringify(this.postData));\n    this.bodyData.shift();\n  }\n\n  color(num: number) {\n    return colorize(num);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UrlSerializer } from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedditAuthService {\n  access_token: string = \"ERROR FOUND. AUTHENTICATE BELOW.\";\n\n  constructor(private httpClient: HttpClient, private urlSerializer: UrlSerializer, private cookieService: CookieService) {\n    this.getToken();\n  }\n\n  resetCookie() {\n    this.cookieService.deleteAll();\n  }\n\n  getToken() {\n    // If accesstoken stored in cookie service and less than 1 hour passed, use that accesstoken\n    let dateCookie = this.cookieService.get(\"date\") == \"\" ? 0 : parseInt(this.cookieService.get(\"date\"));\n    let currentDate = new Date();\n    let dateNow = currentDate.getTime() / 1000;\n\n    // If around 90% of an hour has passed since last access_token, just get a new access token\n    // If not, use the cookie's access token\n    if ((dateNow - dateCookie) / 3600 < 0.9 && this.cookieService.get(\"access_token\") !== \"\") {\n      // Use cookie's access token\n      this.access_token = this.cookieService.get(\"access_token\");\n    } else if (window.location.search !== \"\") {\n      this.getAccessToken();\n    }\n  }\n\n  getAccessToken() {\n    // If already authorized (user logged into reddit), parse the link\n    let parsedTree = this.urlSerializer.parse(window.location.search);\n\n    // If links has error, return\n    if (\"error\" in parsedTree.queryParams) {\n      this.cookieService.set(\"access_token\", \"ERROR FOUND. AUTHENTICATE BELOW\");\n      window.location.assign(\"../\");\n    }\n\n    // Parse code and send to backend for authorization\n    let code = parsedTree.queryParams.code;\n\n    this.httpClient.get(`/api/auth?code=${code}`).subscribe(res => {\n      let currentDate = new Date();\n      let secondsPassed = currentDate.getTime() / 1000;\n\n      if (res[\"access_token\"].includes(\"ERROR\")) {\n        this.cookieService.set(\"date\", \"0\");\n        this.cookieService.set(\"access_token\", \"\");\n      } else {\n        this.cookieService.set(\"date\", secondsPassed.toString());\n        this.cookieService.set(\"access_token\", res[\"access_token\"]);\n      }\n\n      // Redirect to mainpage\n      window.location.assign(\"../\");\n    });\n  }\n\n  gotoRedditOauth() {\n    window.location.replace(\n      `https://www.reddit.com/api/v1/authorize?` +\n        `client_id=4YzuQQE-yhj8wQ` +\n        `&response_type=code` +\n        `&state=state` +\n        `&redirect_uri=${window.location.origin}` +\n        `&duration=temporary` +\n        `&scope=read`\n    );\n  }\n\n  // Calls backend to get reddit data and analyze\n  getAnalyze(reddit_str: string, category: string, limit: number) {\n    let body = {\n      reddit_str: reddit_str,\n      category: category,\n      limit: limit,\n      access_token: this.access_token\n    };\n\n    return this.httpClient.post(\"/api/analyze\", body);\n  }\n}\n","export function colorize(num: Number) {\n  // From green to red\n  let colors = [\"#20df00\", \"#40bf00\", \"#609f00\", \"#a9aea2\", \"#a9aea2\", \"#fb6969\", \"#e6482d\", \"#ff0000\"];\n\n  // Range:\n  // inf to 0.75\n  // 0.75 to 0.50\n  // 0.50 to 0.25\n  // 0.25 to 0.00\n  // 0.00 to -0.25\n  // -0.25 to -0.50\n  // -0.50 to -0.75\n  // -0.75 to inf\n\n  if (num > 7.5) {\n    return colors[0];\n  } else if (num > 5) {\n    return colors[1];\n  } else if (num > 2.5) {\n    return colors[2];\n  } else if (num > 0) {\n    return colors[3];\n  } else if (num > -2.5) {\n    return colors[4];\n  } else if (num > -5) {\n    return colors[5];\n  } else if (num > -7.5) {\n    return colors[6];\n  } else {\n    return colors[7];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}